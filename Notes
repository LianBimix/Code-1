You can search data from your computer in visual studio code

	- Git: instant Backup, version control system - you can go back to different versions of the code to find out where the problem lies 
	- Node: allows us to use Java script outside of browsers/without browsers; for running server software 
	- TS (type script): trans piled Java file, compiled into Java 
	- VSC (visual studio code): overall platform where we code 
		○ Git Graph: to visualize what happens in the cod in Git; get an overview of what happens in Git
		○ ESLint: helps to keep your program clean; shows you errors that need to be fixed 

GitHub is not Git!! 
GitHub is just the management of your files 

- Repository: the database
- Commit: changes of setup; adding of changes; setting of changes
- Branch: something inparallel; everyone has their own so there won't be conflicts with other contributers while working on the ssame file 
- Remote: for example Git Hub
- stage: a change you want to commit; adding changes
- fetch: when you take something from Git Hub to your local computer without changing the files
- pull: same as fetch but it chances the files 
- push: when you push files that you commited from your local computer from the database into the Hub; it is in the back and you don't notice it 
- merge: often done with branches; you merge two files into one without loosing the content of one of them

How can you make a file that is not directly uploaded into Git (is invisible) 
	You can only make it on Git Hub desktop so it won't be uploaded to the global Hub. Go into Visual Studio Code and create a file (or use on that already exists)
	that is named .gitignore. in there you write the name of the file that you want to have ignored. Now you can write into the selected files and it will not 
	detect changes in the Desktop GitHub. 
How to roll everything back to the last commit? 
	RIght-click the Branch in which you made the changes and click on "revert" until you are back to where you want to go back.
How to discard all the changes? 
	Right-click on the file or the branch that you want to discard the changes in GitHub Desktop and select "discard all changes"
How to discard all changes temporarily?
	If you want to be able to restore the discarded changes you need to put them into a Stash. This stash can be restored and with that all the changes that you 
	did within these stashes are restored as well. 
How can you delete all untracked files from your local folder? 
	It's also an option when you right-click. 
What is the difference between the merge strategies: _merge, rebase, squash_
	- merge: it adds a new commit but all the files are beeing kept
	- rebase: it takes the commits so the feature starts before the master and attaches it infront of it
	- squash: it combines the features/changes and they can't be that easily overwritten as in rebase; it's only one feature then and more clean/short

1. What does Visual Studio Code mean by "Sync Changes"?
	
2. What does the ".git" folder do in your project? (turn on hidden files and file extensions if you don't see it)
3. How does Git differ from e.g. Dropbox or Google Drive?
	- Why not use those instead of Git?
4. Why is Git called Git?


HTML:
1. Find out the meaning of the akronym HTML
> HyperText (text that contains links to other texts) Markup Language
	- Who created it and when and why? 
		> created by Tim Berners-Lee in 1991; the World wide Web (also created by him) was invented in 1989
		> it was created to structure documents and make information for users more accessible 
	- What are the origins of "markup"?
		> comes from printing and publishing age; manuscripe was sent to printing companies and someone there structured the text into headlines, footnote, etc.
		> 
		> it was meant to be a universal language that indicates document structures and semantics using tags and/or codes
		> seperates the structure from the presentation 
2. What is Syntax, what is Semantics? Recognize the difference!
	> Syntax defines the rules of the code, how code or tag has to be written so that it works; used for structure; "Is it written correctly?"
	> Semantics defines what the code actually does or represents; used for interpretation; "Does it makes sense?"
3. Time travel to the first browsers
	- Find a simulation
		> way back machine
		> Archive today
	- Find the first website
		> https://web.archive.org/web/19961019212557/http://bnsf.com/

1. By using the inspector in the developer tools (f11) of the browser,  figure out what happens when the browser loads:
	> a simple text file (Extension: ".txt")?
		~ file:///C:/Users/alina/Desktop/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA.txt
	> an HTML file (Extension ".html")?
		~ file:///C:/Users/alina/Desktop/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA%20(2).html
	> compare the internal representations
		~ HTML doesn't jump to the next line automatically 
2. What is the structure of an HTML file?
	> Build a representation of that structure using simple keychains, the simple hole to connect a label to its parent and the ring to connect children. 
	Write the tag names on the labels.  
		~ done
	> create a file with a proper structure using tags.
3. Find out...
	> if the display of files contents in the browser changes, when you change the file (without reloading)
		~ nothing changes
	> how to change the contents displayed without changing the file 
		~ use the dev tools and you can change whatever you like in the content without letting it affect the file
	> what the DOM is
		~ an internal representation; the Binary code from the browser is displayed as text, not 0 and 1
